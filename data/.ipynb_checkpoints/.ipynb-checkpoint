{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "# SQL Alchemy\n",
    "from sqlalchemy import create_engine\n",
    "\n",
    "# Pandas\n",
    "import pandas as pd\n",
    "\n",
    "# Matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# NumPy\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Create Engine for census data\n",
    "#census_database_path = \"../Resources/Census_Data.sqlite\"\n",
    "engine = create_engine(\"postgresql://postgres:postgresql@localhost:5432/sqlhomeworkbadou\")\n",
    "conn = engine.connect()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dept_no</th>\n",
       "      <th>dept_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>d001</td>\n",
       "      <td>Marketing</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>d002</td>\n",
       "      <td>Finance</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>d003</td>\n",
       "      <td>Human Resources</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>d004</td>\n",
       "      <td>Production</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>d005</td>\n",
       "      <td>Development</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>d006</td>\n",
       "      <td>Quality Management</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>d007</td>\n",
       "      <td>Sales</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>d008</td>\n",
       "      <td>Research</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>d009</td>\n",
       "      <td>Customer Service</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  dept_no           dept_name\n",
       "0    d001           Marketing\n",
       "1    d002             Finance\n",
       "2    d003     Human Resources\n",
       "3    d004          Production\n",
       "4    d005         Development\n",
       "5    d006  Quality Management\n",
       "6    d007               Sales\n",
       "7    d008            Research\n",
       "8    d009    Customer Service"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Query All Records in the the City Table\n",
    "departments_data = pd.read_sql(\"SELECT * FROM departments\", conn)\n",
    "departments_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emp_no</th>\n",
       "      <th>dept_no</th>\n",
       "      <th>from_date</th>\n",
       "      <th>to_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>d005</td>\n",
       "      <td>1986-06-26</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002</td>\n",
       "      <td>d007</td>\n",
       "      <td>1996-08-03</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10003</td>\n",
       "      <td>d004</td>\n",
       "      <td>1995-12-03</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10004</td>\n",
       "      <td>d004</td>\n",
       "      <td>1986-12-01</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10005</td>\n",
       "      <td>d003</td>\n",
       "      <td>1989-09-12</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   emp_no dept_no   from_date     to_date\n",
       "0   10001    d005  1986-06-26  9999-01-01\n",
       "1   10002    d007  1996-08-03  9999-01-01\n",
       "2   10003    d004  1995-12-03  9999-01-01\n",
       "3   10004    d004  1986-12-01  9999-01-01\n",
       "4   10005    d003  1989-09-12  9999-01-01"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Query All Records in the the City Table\n",
    "dept_emp_data = pd.read_sql(\"SELECT * FROM dept_emp\", conn)\n",
    "dept_emp_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>dept_no</th>\n",
       "      <th>emp_no</th>\n",
       "      <th>from_date</th>\n",
       "      <th>to_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>d001</td>\n",
       "      <td>110022</td>\n",
       "      <td>1985-01-01</td>\n",
       "      <td>1991-10-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>d001</td>\n",
       "      <td>110039</td>\n",
       "      <td>1991-10-01</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>d002</td>\n",
       "      <td>110085</td>\n",
       "      <td>1985-01-01</td>\n",
       "      <td>1989-12-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>d002</td>\n",
       "      <td>110114</td>\n",
       "      <td>1989-12-17</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>d003</td>\n",
       "      <td>110183</td>\n",
       "      <td>1985-01-01</td>\n",
       "      <td>1992-03-21</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  dept_no  emp_no   from_date     to_date\n",
       "0    d001  110022  1985-01-01  1991-10-01\n",
       "1    d001  110039  1991-10-01  9999-01-01\n",
       "2    d002  110085  1985-01-01  1989-12-17\n",
       "3    d002  110114  1989-12-17  9999-01-01\n",
       "4    d003  110183  1985-01-01  1992-03-21"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Query All Records in the the City Table\n",
    "dept_manager_data = pd.read_sql(\"SELECT * FROM dept_manager\", conn)\n",
    "dept_manager_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emp_no</th>\n",
       "      <th>birth_date</th>\n",
       "      <th>first_name</th>\n",
       "      <th>last_name</th>\n",
       "      <th>gender</th>\n",
       "      <th>hired_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>1953-09-02</td>\n",
       "      <td>Georgi</td>\n",
       "      <td>Facello</td>\n",
       "      <td>M</td>\n",
       "      <td>1986-06-26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002</td>\n",
       "      <td>1964-06-02</td>\n",
       "      <td>Bezalel</td>\n",
       "      <td>Simmel</td>\n",
       "      <td>F</td>\n",
       "      <td>1985-11-21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10003</td>\n",
       "      <td>1959-12-03</td>\n",
       "      <td>Parto</td>\n",
       "      <td>Bamford</td>\n",
       "      <td>M</td>\n",
       "      <td>1986-08-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10004</td>\n",
       "      <td>1954-05-01</td>\n",
       "      <td>Chirstian</td>\n",
       "      <td>Koblick</td>\n",
       "      <td>M</td>\n",
       "      <td>1986-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10005</td>\n",
       "      <td>1955-01-21</td>\n",
       "      <td>Kyoichi</td>\n",
       "      <td>Maliniak</td>\n",
       "      <td>M</td>\n",
       "      <td>1989-09-12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   emp_no  birth_date first_name last_name gender  hired_date\n",
       "0   10001  1953-09-02     Georgi   Facello      M  1986-06-26\n",
       "1   10002  1964-06-02    Bezalel    Simmel      F  1985-11-21\n",
       "2   10003  1959-12-03      Parto   Bamford      M  1986-08-28\n",
       "3   10004  1954-05-01  Chirstian   Koblick      M  1986-12-01\n",
       "4   10005  1955-01-21    Kyoichi  Maliniak      M  1989-09-12"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Query All Records in the the City Table\n",
    "employees_data = pd.read_sql(\"SELECT * FROM employees\", conn)\n",
    "employees_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emp_no</th>\n",
       "      <th>salary</th>\n",
       "      <th>from_date</th>\n",
       "      <th>to_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>$60,117.00</td>\n",
       "      <td>1986-06-26</td>\n",
       "      <td>1987-06-26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002</td>\n",
       "      <td>$65,828.00</td>\n",
       "      <td>1996-08-03</td>\n",
       "      <td>1997-08-03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10003</td>\n",
       "      <td>$40,006.00</td>\n",
       "      <td>1995-12-03</td>\n",
       "      <td>1996-12-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10004</td>\n",
       "      <td>$40,054.00</td>\n",
       "      <td>1986-12-01</td>\n",
       "      <td>1987-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10005</td>\n",
       "      <td>$78,228.00</td>\n",
       "      <td>1989-09-12</td>\n",
       "      <td>1990-09-12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   emp_no      salary   from_date     to_date\n",
       "0   10001  $60,117.00  1986-06-26  1987-06-26\n",
       "1   10002  $65,828.00  1996-08-03  1997-08-03\n",
       "2   10003  $40,006.00  1995-12-03  1996-12-02\n",
       "3   10004  $40,054.00  1986-12-01  1987-12-01\n",
       "4   10005  $78,228.00  1989-09-12  1990-09-12"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Query All Records in the the City Table\n",
    "salaries_data = pd.read_sql(\"SELECT * FROM salaries\", conn)\n",
    "salaries_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emp_no</th>\n",
       "      <th>title</th>\n",
       "      <th>from_date</th>\n",
       "      <th>to_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>Senior Engineer</td>\n",
       "      <td>1986-06-26</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002</td>\n",
       "      <td>Staff</td>\n",
       "      <td>1996-08-03</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10003</td>\n",
       "      <td>Senior Engineer</td>\n",
       "      <td>1995-12-03</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10004</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>1986-12-01</td>\n",
       "      <td>1995-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004</td>\n",
       "      <td>Senior Engineer</td>\n",
       "      <td>1995-12-01</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   emp_no            title   from_date     to_date\n",
       "0   10001  Senior Engineer  1986-06-26  9999-01-01\n",
       "1   10002            Staff  1996-08-03  9999-01-01\n",
       "2   10003  Senior Engineer  1995-12-03  9999-01-01\n",
       "3   10004         Engineer  1986-12-01  1995-12-01\n",
       "4   10004  Senior Engineer  1995-12-01  9999-01-01"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Query All Records in the the City Table\n",
    "titles_data = pd.read_sql(\"SELECT * FROM titles\", conn)\n",
    "titles_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emp_no</th>\n",
       "      <th>salary</th>\n",
       "      <th>from_date_x</th>\n",
       "      <th>to_date_x</th>\n",
       "      <th>title</th>\n",
       "      <th>from_date_y</th>\n",
       "      <th>to_date_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10001</td>\n",
       "      <td>$60,117.00</td>\n",
       "      <td>1986-06-26</td>\n",
       "      <td>1987-06-26</td>\n",
       "      <td>Senior Engineer</td>\n",
       "      <td>1986-06-26</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10002</td>\n",
       "      <td>$65,828.00</td>\n",
       "      <td>1996-08-03</td>\n",
       "      <td>1997-08-03</td>\n",
       "      <td>Staff</td>\n",
       "      <td>1996-08-03</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>10003</td>\n",
       "      <td>$40,006.00</td>\n",
       "      <td>1995-12-03</td>\n",
       "      <td>1996-12-02</td>\n",
       "      <td>Senior Engineer</td>\n",
       "      <td>1995-12-03</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10004</td>\n",
       "      <td>$40,054.00</td>\n",
       "      <td>1986-12-01</td>\n",
       "      <td>1987-12-01</td>\n",
       "      <td>Engineer</td>\n",
       "      <td>1986-12-01</td>\n",
       "      <td>1995-12-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10004</td>\n",
       "      <td>$40,054.00</td>\n",
       "      <td>1986-12-01</td>\n",
       "      <td>1987-12-01</td>\n",
       "      <td>Senior Engineer</td>\n",
       "      <td>1995-12-01</td>\n",
       "      <td>9999-01-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   emp_no      salary from_date_x   to_date_x            title from_date_y  \\\n",
       "0   10001  $60,117.00  1986-06-26  1987-06-26  Senior Engineer  1986-06-26   \n",
       "1   10002  $65,828.00  1996-08-03  1997-08-03            Staff  1996-08-03   \n",
       "2   10003  $40,006.00  1995-12-03  1996-12-02  Senior Engineer  1995-12-03   \n",
       "3   10004  $40,054.00  1986-12-01  1987-12-01         Engineer  1986-12-01   \n",
       "4   10004  $40,054.00  1986-12-01  1987-12-01  Senior Engineer  1995-12-01   \n",
       "\n",
       "    to_date_y  \n",
       "0  9999-01-01  \n",
       "1  9999-01-01  \n",
       "2  9999-01-01  \n",
       "3  1995-12-01  \n",
       "4  9999-01-01  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# let combined the data\n",
    "combined_data=pd.merge(salaries_data, titles_data, on =\"emp_no\", how=\"inner\")\n",
    "combined_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#title_salary=combined_data[['emp_no','salary','title']]\n",
    "#title_salary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emp_no</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>title</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Assistant Engineer</th>\n",
       "      <td>251495.398533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Engineer</th>\n",
       "      <td>252943.159987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Manager</th>\n",
       "      <td>110780.833333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior Engineer</th>\n",
       "      <td>253034.375949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior Staff</th>\n",
       "      <td>253423.367183</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           emp_no\n",
       "title                            \n",
       "Assistant Engineer  251495.398533\n",
       "Engineer            252943.159987\n",
       "Manager             110780.833333\n",
       "Senior Engineer     253034.375949\n",
       "Senior Staff        253423.367183"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "group_data=combined_data.groupby(['title']).mean()\n",
    "group_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>emp_no</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>salary</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>$100,000.00</th>\n",
       "      <td>483067.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,006.00</th>\n",
       "      <td>402349.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,022.00</th>\n",
       "      <td>248927.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,025.00</th>\n",
       "      <td>281475.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,026.00</th>\n",
       "      <td>410411.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,027.00</th>\n",
       "      <td>206029.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,030.00</th>\n",
       "      <td>62709.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,031.00</th>\n",
       "      <td>404261.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,052.00</th>\n",
       "      <td>276196.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,053.00</th>\n",
       "      <td>489872.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,058.00</th>\n",
       "      <td>434468.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,064.00</th>\n",
       "      <td>486891.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,068.00</th>\n",
       "      <td>231420.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,072.00</th>\n",
       "      <td>57996.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,079.00</th>\n",
       "      <td>490267.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,097.00</th>\n",
       "      <td>285298.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,102.00</th>\n",
       "      <td>35069.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,107.00</th>\n",
       "      <td>445354.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,118.00</th>\n",
       "      <td>452633.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,122.00</th>\n",
       "      <td>261213.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,133.00</th>\n",
       "      <td>359224.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,139.00</th>\n",
       "      <td>93639.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,148.00</th>\n",
       "      <td>249631.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,150.00</th>\n",
       "      <td>210269.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,154.00</th>\n",
       "      <td>28373.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,158.00</th>\n",
       "      <td>107710.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,162.00</th>\n",
       "      <td>263041.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,163.00</th>\n",
       "      <td>472438.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,164.00</th>\n",
       "      <td>40230.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$100,167.00</th>\n",
       "      <td>280525.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,849.00</th>\n",
       "      <td>212652.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,851.00</th>\n",
       "      <td>425763.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,852.00</th>\n",
       "      <td>455475.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,853.00</th>\n",
       "      <td>66181.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,860.00</th>\n",
       "      <td>407573.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,862.00</th>\n",
       "      <td>43668.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,867.00</th>\n",
       "      <td>18581.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,876.00</th>\n",
       "      <td>230361.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,878.00</th>\n",
       "      <td>101914.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,881.00</th>\n",
       "      <td>279372.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,888.00</th>\n",
       "      <td>269570.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,897.00</th>\n",
       "      <td>61601.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,903.00</th>\n",
       "      <td>476850.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,904.00</th>\n",
       "      <td>490610.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,918.00</th>\n",
       "      <td>435343.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,927.00</th>\n",
       "      <td>87374.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,937.00</th>\n",
       "      <td>242204.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,939.00</th>\n",
       "      <td>420951.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,948.00</th>\n",
       "      <td>31595.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,959.00</th>\n",
       "      <td>415886.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,973.00</th>\n",
       "      <td>282731.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,976.00</th>\n",
       "      <td>70087.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,977.00</th>\n",
       "      <td>498461.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,978.00</th>\n",
       "      <td>278540.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,981.00</th>\n",
       "      <td>31499.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,984.00</th>\n",
       "      <td>205875.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,988.00</th>\n",
       "      <td>31607.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,990.00</th>\n",
       "      <td>425641.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,993.00</th>\n",
       "      <td>213379.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>$99,999.00</th>\n",
       "      <td>235675.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>50355 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               emp_no\n",
       "salary               \n",
       "$100,000.00  483067.0\n",
       "$100,006.00  402349.0\n",
       "$100,022.00  248927.0\n",
       "$100,025.00  281475.0\n",
       "$100,026.00  410411.0\n",
       "$100,027.00  206029.0\n",
       "$100,030.00   62709.0\n",
       "$100,031.00  404261.0\n",
       "$100,052.00  276196.0\n",
       "$100,053.00  489872.0\n",
       "$100,058.00  434468.0\n",
       "$100,064.00  486891.0\n",
       "$100,068.00  231420.0\n",
       "$100,072.00   57996.0\n",
       "$100,079.00  490267.0\n",
       "$100,097.00  285298.0\n",
       "$100,102.00   35069.0\n",
       "$100,107.00  445354.0\n",
       "$100,118.00  452633.0\n",
       "$100,122.00  261213.0\n",
       "$100,133.00  359224.5\n",
       "$100,139.00   93639.0\n",
       "$100,148.00  249631.0\n",
       "$100,150.00  210269.0\n",
       "$100,154.00   28373.0\n",
       "$100,158.00  107710.0\n",
       "$100,162.00  263041.0\n",
       "$100,163.00  472438.0\n",
       "$100,164.00   40230.0\n",
       "$100,167.00  280525.0\n",
       "...               ...\n",
       "$99,849.00   212652.0\n",
       "$99,851.00   425763.0\n",
       "$99,852.00   455475.0\n",
       "$99,853.00    66181.0\n",
       "$99,860.00   407573.0\n",
       "$99,862.00    43668.0\n",
       "$99,867.00    18581.0\n",
       "$99,876.00   230361.0\n",
       "$99,878.00   101914.0\n",
       "$99,881.00   279372.0\n",
       "$99,888.00   269570.0\n",
       "$99,897.00    61601.0\n",
       "$99,903.00   476850.0\n",
       "$99,904.00   490610.0\n",
       "$99,918.00   435343.0\n",
       "$99,927.00    87374.0\n",
       "$99,937.00   242204.0\n",
       "$99,939.00   420951.0\n",
       "$99,948.00    31595.0\n",
       "$99,959.00   415886.0\n",
       "$99,973.00   282731.0\n",
       "$99,976.00    70087.0\n",
       "$99,977.00   498461.0\n",
       "$99,978.00   278540.0\n",
       "$99,981.00    31499.0\n",
       "$99,984.00   205875.0\n",
       "$99,988.00    31607.0\n",
       "$99,990.00   425641.0\n",
       "$99,993.00   213379.0\n",
       "$99,999.00   235675.0\n",
       "\n",
       "[50355 rows x 1 columns]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "group_data2=combined_data.groupby(['salary']).mean()\n",
    "group_data2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
